{
	"name": "snippets",
	"displayName": "Snippets",
	"description": "Supercharge your Snippets in VS Code â€” Manage your code snippets & AI prompts without quitting your editor.",
	"version": "4.0.0",
	"preview": false,
	"license": "SEE LICENSE IN LICENSE.txt",
	"publisher": "tahabasri",
	"author": {
		"name": "Taha BASRI",
		"email": "tahabsri@gmail.com",
		"url": "https://tahabasri.com"
	},
	"icon": "images/logo/logo.png",
	"homepage": "https://github.com/tahabasri/snippets/blob/main/README.md",
	"repository": {
		"type": "git",
		"url": "https://github.com/tahabasri/snippets.git"
	},
	"bugs": {
		"url": "https://github.com/tahabasri/snippets/issues"
	},
	"engines": {
		"vscode": "^1.75.0"
	},
	"categories": [
		"Snippets",
		"AI",
		"Chat",
		"Programming Languages",
		"Other"
	],
	"keywords": [
		"Snippets",
		"Snippet",
		"AI Prompts",
		"AI Prompt",
		"Bookmarks",
		"Bookmark",
		"Code Block",
		"IntelliSense"
	],
	"galleryBanner": {
		"color": "#ffc107",
		"theme": "dark"
	},
	"activationEvents": [
		"onStartupFinished"
	],
	"main": "./dist/extension",
	"contributes": {
		"viewsWelcome": [
			{
				"view": "snippetsExplorer",
				"contents": "In order to use snippets, save some code here.\n[Add Snippet](command:globalSnippetsCmd.addSnippet)\n[Add Snippet Folder](command:globalSnippetsCmd.addSnippetFolder)\n[Import Snippets](command:globalSnippetsCmd.importSnippets)\nTo learn more about how to use snippets [read the docs](https://github.com/tahabasri/snippets/blob/main/README.md#features).",
				"when": "snippets.host == vscode"
			},
			{
				"view": "snippetsExplorer",
				"contents": "In order to use snippets, save some code here.\n[Add Snippet](command:globalSnippetsCmd.addSnippet)\n[Add Snippet Folder](command:globalSnippetsCmd.addSnippetFolder)\n[Import Snippets](command:globalSnippetsCmd.importSnippets)\nTo import Snippets from VS Code, you can export them from an open VS Code window, and then, use the Import Snippets command in Cursor.\nTo learn more about how to use snippets [read the docs](https://github.com/tahabasri/snippets/blob/main/README.md#features).",
				"when": "snippets.host == cursor"
			},
			{
				"view": "snippetsExplorer",
				"contents": "In order to use snippets, save some code here.\n[Add Snippet](command:globalSnippetsCmd.addSnippet)\n[Add Snippet Folder](command:globalSnippetsCmd.addSnippetFolder)\n[Import Snippets](command:globalSnippetsCmd.importSnippets)\nTo import Snippets from VS Code, you can export them from an open VS Code window, and then, use the Import Snippets command in Windsurf.\nTo learn more about how to use snippets [read the docs](https://github.com/tahabasri/snippets/blob/main/README.md#features).",
				"when": "snippets.host == windsurf"
			},
			{
				"view": "wsSnippetsExplorer",
				"when": "config.snippets.useWorkspaceFolder && snippets.workspaceState != fileAvailable",
				"contents": "In order to use snippets in current workspace, you should initialize `snippets.json` file inside folder `.vscode`.\n[Request to Initialize File](command:miscCmd.requestWSConfig)"
			},
			{
				"view": "wsSnippetsExplorer",
				"when": "snippets.workspaceState == fileAvailable",
				"contents": "Snippets in current workspace are available. Save some code locally.\n[Add Snippet](command:wsSnippetsCmd.addSnippet)\n[Add Snippet Folder](command:wsSnippetsCmd.addSnippetFolder)"
			}
		],
		"commands": [
			{
				"command": "miscCmd.requestWSConfig",
				"title": "Init WS Config"
			},
			{
				"command": "commonSnippetsCmd.refreshEntry",
				"title": "Refresh Snippets",
				"category": "Snippets",
				"icon": "$(refresh)"
			},
			{
				"command": "globalSnippetsCmd.openSnippet",
				"title": "Open Snippet",
				"category": "Snippets"
			},
			{
				"command": "globalSnippetsCmd.openSnippetInTerminal",
				"title": "Open Snippet in Terminal",
				"category": "Snippets"
			},
			{
				"command": "globalSnippetsCmd.copySnippetToClipboard",
				"title": "Copy Snippet to Clipboard",
				"category": "Snippets"
			},
			{
				"command": "commonSnippetsCmd.addSnippet",
				"title": "Add New Snippet",
				"icon": "$(search-new-editor)",
				"category": "Snippets"
			},
			{
				"command": "globalSnippetsCmd.addSnippet",
				"title": "Add New Snippet",
				"icon": "$(search-new-editor)",
				"category": "Snippets"
			},
			{
				"command": "wsSnippetsCmd.addSnippet",
				"title": "Add New Snippet",
				"icon": "$(search-new-editor)",
				"category": "Snippets"
			},
			{
				"command": "commonSnippetsCmd.addSnippetFromClipboard",
				"title": "Add New Snippet from Clipboard",
				"icon": "$(search-new-editor)",
				"category": "Snippets"
			},
			{
				"command": "globalSnippetsCmd.addSnippetFromClipboard",
				"title": "Add New Snippet from Clipboard",
				"icon": "$(search-new-editor)",
				"category": "Snippets"
			},
			{
				"command": "wsSnippetsCmd.addSnippetFromClipboard",
				"title": "Add New Snippet from Clipboard",
				"icon": "$(search-new-editor)",
				"category": "Snippets"
			},
			{
				"command": "globalSnippetsCmd.askGithubCopilot",
				"title": "Ask Github Copilot",
				"category": "Snippets"
			},
			{
				"command": "globalSnippetsCmd.addToGithubCopilot",
				"title": "Add to Github Copilot",
				"category": "Snippets"
			},
			{
				"command": "globalSnippetsCmd.addAsCodeSnippetToGithubCopilot",
				"title": "Add as Code Snippet to Github Copilot",
				"category": "Snippets"
			},
			{
				"command": "globalSnippetsCmd.addToCursorAIPane",
				"title": "Add to Cursor AI Pane",
				"category": "Snippets"
			},
			{
				"command": "globalSnippetsCmd.addAsCodeSnippetToCursorAIPane",
				"title": "Add as Code Snippet to Cursor AI Pane",
				"category": "Snippets"
			},
			{
				"command": "globalSnippetsCmd.addToGeminiCodeAssist",
				"title": "Add to Gemini Code Assist",
				"category": "Snippets"
			},
			{
				"command": "globalSnippetsCmd.addAsCodeSnippetToGeminiCodeAssist",
				"title": "Add as Code Snippet to Gemini Code Assist",
				"category": "Snippets"
			},
			{
				"command": "commonSnippetsCmd.addSnippetFolder",
				"title": "Add Folder",
				"icon": "$(new-folder)",
				"category": "Snippets"
			},
			{
				"command": "globalSnippetsCmd.addSnippetFolder",
				"title": "Add Folder",
				"icon": "$(new-folder)",
				"category": "Snippets"
			},
			{
				"command": "wsSnippetsCmd.addSnippetFolder",
				"title": "Add Folder",
				"icon": "$(new-folder)",
				"category": "Snippets"
			},
			{
				"command": "globalSnippetsCmd.editSnippet",
				"title": "Edit Snippet",
				"icon": "$(edit)",
				"category": "Snippets"
			},
			{
				"command": "wsSnippetsCmd.editSnippet",
				"title": "Edit Snippet",
				"icon": "$(edit)",
				"category": "Snippets"
			},
			{
				"command": "globalSnippetsCmd.editSnippetFolder",
				"title": "Edit Folder",
				"category": "Snippets"
			},
			{
				"command": "wsSnippetsCmd.editSnippetFolder",
				"title": "Edit Folder",
				"category": "Snippets"
			},
			{
				"command": "globalSnippetsCmd.deleteSnippet",
				"title": "Delete Snippet",
				"icon": "$(remove)",
				"category": "Snippets"
			},
			{
				"command": "wsSnippetsCmd.deleteSnippet",
				"title": "Delete Snippet",
				"icon": "$(remove)",
				"category": "Snippets"
			},
			{
				"command": "globalSnippetsCmd.deleteSnippetFolder",
				"title": "Delete Folder",
				"icon": "$(remove)",
				"category": "Snippets"
			},
			{
				"command": "wsSnippetsCmd.deleteSnippetFolder",
				"title": "Delete Folder",
				"icon": "$(remove)",
				"category": "Snippets"
			},
			{
				"command": "globalSnippetsCmd.openSnippetButton",
				"title": "Open Snippet",
				"icon": "$(notebook-open-as-text)",
				"category": "Snippets"
			},
			{
				"command": "globalSnippetsCmd.openSnippetInTerminalButton",
				"title": "Open Snippet in Terminal",
				"icon": "$(terminal-view-icon)",
				"category": "Snippets"
			},
			{
				"command": "globalSnippetsCmd.moveSnippetUp",
				"title": "Move Snippet Up",
				"icon": "$(marker-navigation-previous)",
				"category": "Snippets"
			},
			{
				"command": "wsSnippetsCmd.moveSnippetUp",
				"title": "Move Snippet Up",
				"icon": "$(marker-navigation-previous)",
				"category": "Snippets"
			},
			{
				"command": "globalSnippetsCmd.moveSnippetDown",
				"title": "Move Snippet Down",
				"icon": "$(marker-navigation-next)",
				"category": "Snippets"
			},
			{
				"command": "wsSnippetsCmd.moveSnippetDown",
				"title": "Move Snippet Down",
				"icon": "$(marker-navigation-next)",
				"category": "Snippets"
			},
			{
				"command": "globalSnippetsCmd.fixSnippets",
				"title": "Troubleshoot Snippets",
				"icon": "$(pulse)",
				"category": "Snippets"
			},
			{
				"command": "wsSnippetsCmd.fixSnippets",
				"title": "Troubleshoot Snippets",
				"icon": "$(pulse)",
				"category": "Snippets"
			},
			{
				"command": "globalSnippetsCmd.exportSnippets",
				"title": "Export Snippets",
				"icon": "$(cloud-upload)",
				"category": "Snippets"
			},
			{
				"command": "globalSnippetsCmd.importSnippets",
				"title": "Import Snippets",
				"icon": "$(cloud-download)",
				"category": "Snippets"
			},
			{
				"command": "globalSnippetsCmd.sortSnippets",
				"title": "Sort Snippets [A-Z]",
				"icon": "$(list-ordered)",
				"category": "Snippets"
			},
			{
				"command": "wsSnippetsCmd.sortSnippets",
				"title": "Sort Snippets [A-Z]",
				"icon": "$(list-ordered)",
				"category": "Snippets"
			},
			{
				"command": "globalSnippetsCmd.sortAllSnippets",
				"title": "Sort All Snippets [A-Z]",
				"icon": "$(list-ordered)",
				"category": "Snippets"
			},
			{
				"command": "wsSnippetsCmd.sortAllSnippets",
				"title": "Sort All Snippets [A-Z]",
				"icon": "$(list-ordered)",
				"category": "Snippets"
			}
		],
		"menus": {
			"commandPalette": [
				{
					"command": "miscCmd.requestWSConfig",
					"when": "false"
				},
				{
					"command": "commonSnippetsCmd.refreshEntry",
					"when": "false"
				},
				{
					"command": "globalSnippetsCmd.addSnippet",
					"when": "false"
				},
				{
					"command": "wsSnippetsCmd.addSnippet",
					"when": "false"
				},
				{
					"command": "globalSnippetsCmd.addSnippetFromClipboard",
					"when": "false"
				},
				{
					"command": "wsSnippetsCmd.addSnippetFromClipboard",
					"when": "false"
				},
				{
					"command": "globalSnippetsCmd.addSnippetFolder",
					"when": "false"
				},
				{
					"command": "wsSnippetsCmd.addSnippetFolder",
					"when": "false"
				},
				{
					"command": "globalSnippetsCmd.editSnippet",
					"when": "false"
				},
				{
					"command": "wsSnippetsCmd.editSnippet",
					"when": "false"
				},
				{
					"command": "globalSnippetsCmd.editSnippetFolder",
					"when": "false"
				},
				{
					"command": "wsSnippetsCmd.editSnippetFolder",
					"when": "false"
				},
				{
					"command": "globalSnippetsCmd.deleteSnippet",
					"when": "false"
				},
				{
					"command": "wsSnippetsCmd.deleteSnippet",
					"when": "false"
				},
				{
					"command": "globalSnippetsCmd.deleteSnippetFolder",
					"when": "false"
				},
				{
					"command": "wsSnippetsCmd.deleteSnippetFolder",
					"when": "false"
				},
				{
					"command": "globalSnippetsCmd.openSnippetButton",
					"when": "false"
				},
				{
					"command": "globalSnippetsCmd.openSnippetInTerminalButton",
					"when": "false"
				},
				{
					"command": "globalSnippetsCmd.moveSnippetUp",
					"when": "false"
				},
				{
					"command": "wsSnippetsCmd.moveSnippetUp",
					"when": "false"
				},
				{
					"command": "globalSnippetsCmd.fixSnippets",
					"when": "false"
				},
				{
					"command": "wsSnippetsCmd.fixSnippets",
					"when": "false"
				},
				{
					"command": "globalSnippetsCmd.sortSnippets",
					"when": "false"
				},
				{
					"command": "wsSnippetsCmd.sortSnippets",
					"when": "false"
				},
				{
					"command": "globalSnippetsCmd.sortAllSnippets",
					"when": "false"
				},
				{
					"command": "wsSnippetsCmd.sortAllSnippets",
					"when": "false"
				},
				{
					"command": "globalSnippetsCmd.moveSnippetDown",
					"when": "false"
				},
				{
					"command": "wsSnippetsCmd.moveSnippetDown",
					"when": "false"
				}
			],
			"view/title": [
				{
					"command": "globalSnippetsCmd.addSnippet",
					"when": "view == snippetsExplorer",
					"group": "navigation@1"
				},
				{
					"command": "wsSnippetsCmd.addSnippet",
					"when": "view == wsSnippetsExplorer && snippets.workspaceState == fileAvailable",
					"group": "navigation@1"
				},
				{
					"command": "globalSnippetsCmd.addSnippetFolder",
					"when": "view == snippetsExplorer",
					"group": "navigation@2"
				},
				{
					"command": "wsSnippetsCmd.addSnippetFolder",
					"when": "view == wsSnippetsExplorer && snippets.workspaceState == fileAvailable",
					"group": "navigation@2"
				},
				{
					"command": "commonSnippetsCmd.refreshEntry",
					"when": "view == snippetsExplorer",
					"group": "navigation@3"
				},
				{
					"command": "globalSnippetsCmd.sortAllSnippets",
					"when": "view == snippetsExplorer",
					"group": "navigation@4"
				},
				{
					"command": "globalSnippetsCmd.addSnippetFromClipboard",
					"when": "view == snippetsExplorer",
					"group": "other@1"
				},
				{
					"command": "globalSnippetsCmd.exportSnippets",
					"when": "view == snippetsExplorer",
					"group": "other@2"
				},
				{
					"command": "globalSnippetsCmd.importSnippets",
					"when": "view == snippetsExplorer",
					"group": "other@3"
				},
				{
					"command": "globalSnippetsCmd.fixSnippets",
					"when": "view == snippetsExplorer",
					"group": "other@4"
				},
				{
					"command": "wsSnippetsCmd.addSnippetFromClipboard",
					"when": "view == wsSnippetsExplorer && snippets.workspaceState == fileAvailable",
					"group": "other"
				},
				{
					"command": "wsSnippetsCmd.fixSnippets",
					"when": "view == wsSnippetsExplorer && snippets.workspaceState == fileAvailable",
					"group": "other@1"
				},
				{
					"command": "commonSnippetsCmd.refreshEntry",
					"when": "view == wsSnippetsExplorer",
					"group": "navigation@3"
				},
				{
					"command": "wsSnippetsCmd.sortAllSnippets",
					"when": "view == wsSnippetsExplorer && snippets.workspaceState == fileAvailable",
					"group": "navigation@4"
				}
			],
			"view/item/context": [
				{
					"command": "globalSnippetsCmd.openSnippet",
					"when": "view == snippetsExplorer && viewItem =~ /^snippet(:\\S+)?$/ && snippets.actionMode == inline",
					"group": "1_snippets@1"
				},
				{
					"command": "globalSnippetsCmd.openSnippetInTerminal",
					"when": "view == snippetsExplorer && viewItem =~ /^snippet(:\\S+)?$/ && snippets.actionMode == inline",
					"group": "1_snippets@3"
				},
				{
					"command": "globalSnippetsCmd.copySnippetToClipboard",
					"when": "view == snippetsExplorer && viewItem =~ /^snippet(:\\S+)?$/",
					"group": "1_snippets@5"
				},
				{
					"command": "globalSnippetsCmd.addSnippet",
					"when": "view == snippetsExplorer",
					"group": "2_snippetManagement@1"
				},
				{
					"command": "wsSnippetsCmd.addSnippet",
					"when": "view == wsSnippetsExplorer && snippets.workspaceState == fileAvailable",
					"group": "2_snippetManagement@1"
				},
				{
					"command": "globalSnippetsCmd.addSnippetFromClipboard",
					"when": "view == snippetsExplorer",
					"group": "2_snippetManagement@2"
				},
				{
					"command": "wsSnippetsCmd.addSnippetFromClipboard",
					"when": "view == wsSnippetsExplorer && snippets.workspaceState == fileAvailable",
					"group": "2_snippetManagement@2"
				},
				{
					"command": "globalSnippetsCmd.editSnippet",
					"when": "view == snippetsExplorer && viewItem =~ /^snippet(:\\S+)?$/",
					"group": "2_snippetManagement@3"
				},
				{
					"command": "wsSnippetsCmd.editSnippet",
					"when": "view == wsSnippetsExplorer && viewItem =~ /^snippet(:\\S+)?$/ && snippets.workspaceState == fileAvailable",
					"group": "2_snippetManagement@3"
				},
				{
					"command": "globalSnippetsCmd.deleteSnippet",
					"when": "view == snippetsExplorer && viewItem =~ /^snippet(:\\S+)?$/",
					"group": "2_snippetManagement@4"
				},
				{
					"command": "wsSnippetsCmd.deleteSnippet",
					"when": "view == wsSnippetsExplorer && viewItem =~ /^snippet(:\\S+)?$/ && snippets.workspaceState == fileAvailable",
					"group": "2_snippetManagement@4"
				},
				{
					"command": "globalSnippetsCmd.addSnippetFolder",
					"when": "view == snippetsExplorer",
					"group": "3_folderManagement@1"
				},
				{
					"command": "wsSnippetsCmd.addSnippetFolder",
					"when": "view == wsSnippetsExplorer && snippets.workspaceState == fileAvailable",
					"group": "3_folderManagement@1"
				},
				{
					"command": "globalSnippetsCmd.editSnippetFolder",
					"when": "view == snippetsExplorer && viewItem =~ /^snippetFolder(:\\S+)?$/",
					"group": "3_folderManagement@2"
				},
				{
					"command": "wsSnippetsCmd.editSnippetFolder",
					"when": "view == wsSnippetsExplorer && viewItem =~ /^snippetFolder(:\\S+)?$/ && snippets.workspaceState == fileAvailable",
					"group": "3_folderManagement@2"
				},
				{
					"command": "globalSnippetsCmd.deleteSnippetFolder",
					"when": "view == snippetsExplorer && viewItem =~ /^snippetFolder(:\\S+)?$/",
					"group": "3_folderManagement@3"
				},
				{
					"command": "wsSnippetsCmd.deleteSnippetFolder",
					"when": "view == wsSnippetsExplorer && viewItem =~ /^snippetFolder(:\\S+)?$/ && snippets.workspaceState == fileAvailable",
					"group": "3_folderManagement@3"
				},
				{
					"command": "globalSnippetsCmd.askGithubCopilot",
					"when": "view == snippetsExplorer && viewItem =~ /^snippet(:\\S+)?$/ && chatIsEnabled && github.copilot.activated",
					"group": "4_copilot@1"
				},
				{
					"command": "globalSnippetsCmd.addToGithubCopilot",
					"when": "view == snippetsExplorer && viewItem =~ /^snippet(:\\S+)?$/ && chatIsEnabled && github.copilot.activated",
					"group": "4_copilot@2"
				},
				{
					"command": "globalSnippetsCmd.addAsCodeSnippetToGithubCopilot",
					"when": "view == snippetsExplorer && viewItem =~ /^snippet(:\\S+)?$/ && chatIsEnabled && github.copilot.activated",
					"group": "4_copilot@3"
				},
				{
					"command": "globalSnippetsCmd.addToCursorAIPane",
					"when": "view == snippetsExplorer && viewItem =~ /^snippet(:\\S+)?$/ && snippets.host == cursor",
					"group": "5_copilot@1"
				},
				{
					"command": "globalSnippetsCmd.addAsCodeSnippetToCursorAIPane",
					"when": "view == snippetsExplorer && viewItem =~ /^snippet(:\\S+)?$/ && snippets.host == cursor",
					"group": "5_copilot@2"
				},
				{
					"command": "globalSnippetsCmd.addToGeminiCodeAssist",
					"when": "view == snippetsExplorer && viewItem =~ /^snippet(:\\S+)?$/ && config.geminicodeassist.enable",
					"group": "6_gemini@1"
				},
				{
					"command": "globalSnippetsCmd.addAsCodeSnippetToGeminiCodeAssist",
					"when": "view == snippetsExplorer && viewItem =~ /^snippet(:\\S+)?$/ && config.geminicodeassist.enable",
					"group": "6_gemini@2"
				},
				{
					"command": "globalSnippetsCmd.openSnippetButton",
					"when": "view == snippetsExplorer && viewItem =~ /^snippet(:\\S+)?$/ && snippets.actionMode == button",
					"group": "inline"
				},
				{
					"command": "globalSnippetsCmd.openSnippetInTerminalButton",
					"when": "view == snippetsExplorer && viewItem =~ /^snippet(:\\S+)?$/ && snippets.actionMode == button",
					"group": "inline"
				},
				{
					"command": "globalSnippetsCmd.moveSnippetUp",
					"when": "view == snippetsExplorer && viewItem =~ /^\\S*:(up|up&down)$/",
					"group": "inline"
				},
				{
					"command": "wsSnippetsCmd.moveSnippetUp",
					"when": "view == wsSnippetsExplorer && viewItem =~ /^\\S*:(up|up&down)$/ && snippets.workspaceState == fileAvailable",
					"group": "inline"
				},
				{
					"command": "globalSnippetsCmd.moveSnippetDown",
					"when": "view == snippetsExplorer && viewItem =~ /^\\S*:(down|up&down)$/",
					"group": "inline"
				},
				{
					"command": "wsSnippetsCmd.moveSnippetDown",
					"when": "view == wsSnippetsExplorer && viewItem =~ /^\\S*:(down|up&down)$/ && snippets.workspaceState == fileAvailable",
					"group": "inline"
				},
				{
					"command": "globalSnippetsCmd.sortSnippets",
					"when": "view == snippetsExplorer && viewItem =~ /^snippetFolder(:\\S+)?$/",
					"group": "inline"
				},
				{
					"command": "wsSnippetsCmd.sortSnippets",
					"when": "view == wsSnippetsExplorer && snippets.workspaceState == fileAvailable && viewItem =~ /^snippetFolder(:\\S+)?$/",
					"group": "inline"
				},
				{
					"command": "globalSnippetsCmd.openSnippet",
					"when": "view == wsSnippetsExplorer && viewItem =~ /^snippet(:\\S+)?$/ && snippets.actionMode == inline",
					"group": "1_snippets@1"
				},
				{
					"command": "globalSnippetsCmd.openSnippetButton",
					"when": "view == wsSnippetsExplorer && viewItem =~ /^snippet(:\\S+)?$/ && snippets.actionMode == button",
					"group": "inline"
				},
				{
					"command": "globalSnippetsCmd.openSnippetInTerminal",
					"when": "view == wsSnippetsExplorer && viewItem =~ /^snippet(:\\S+)?$/ && snippets.actionMode == inline",
					"group": "1_snippets@3"
				},
				{
					"command": "globalSnippetsCmd.openSnippetInTerminalButton",
					"when": "view == wsSnippetsExplorer && viewItem =~ /^snippet(:\\S+)?$/ && snippets.actionMode == button",
					"group": "inline"
				},
				{
					"command": "globalSnippetsCmd.copySnippetToClipboard",
					"when": "view == wsSnippetsExplorer && viewItem =~ /^snippet(:\\S+)?$/",
					"group": "1_snippets@4"
				},
				{
					"command": "globalSnippetsCmd.askGithubCopilot",
					"when": "view == wsSnippetsExplorer && viewItem =~ /^snippet(:\\S+)?$/ && chatIsEnabled && github.copilot.activated",
					"group": "4_copilot@1"
				},
				{
					"command": "globalSnippetsCmd.addToGithubCopilot",
					"when": "view == wsSnippetsExplorer && viewItem =~ /^snippet(:\\S+)?$/ && chatIsEnabled && github.copilot.activated",
					"group": "4_copilot@2"
				},
				{
					"command": "globalSnippetsCmd.addAsCodeSnippetToGithubCopilot",
					"when": "view == wsSnippetsExplorer && viewItem =~ /^snippet(:\\S+)?$/ && chatIsEnabled && github.copilot.activated",
					"group": "4_copilot@3"
				},
				{
					"command": "globalSnippetsCmd.addToCursorAIPane",
					"when": "view == wsSnippetsExplorer && viewItem =~ /^snippet(:\\S+)?$/ && snippets.host == cursor",
					"group": "5_copilot@1"
				},
				{
					"command": "globalSnippetsCmd.addAsCodeSnippetToCursorAIPane",
					"when": "view == wsSnippetsExplorer && viewItem =~ /^snippet(:\\S+)?$/ && snippets.host == cursor",
					"group": "5_copilot@2"
				},
				{
					"command": "globalSnippetsCmd.addToGeminiCodeAssist",
					"when": "view == wsSnippetsExplorer && viewItem =~ /^snippet(:\\S+)?$/ && config.geminicodeassist.enable",
					"group": "6_gemini@1"
				},
				{
					"command": "globalSnippetsCmd.addAsCodeSnippetToGeminiCodeAssist",
					"when": "view == wsSnippetsExplorer && viewItem =~ /^snippet(:\\S+)?$/ && config.geminicodeassist.enable",
					"group": "6_gemini@2"
				}
			],
			"editor/context": [
				{
					"command": "commonSnippetsCmd.addSnippet",
					"when": "editorTextFocus",
					"group": "snippets@1"
				}
			]
		},
		"viewsContainers": {
			"activitybar": [
				{
					"id": "snippets-explorer",
					"title": "Snippets",
					"icon": "resources/icons/logo_w.svg"
				}
			]
		},
		"views": {
			"snippets-explorer": [
				{
					"id": "snippetsExplorer",
					"name": "Global Snippets",
					"icon": "resources/icons/logo_w.svg"
				},
				{
					"id": "wsSnippetsExplorer",
					"name": "Workspace Snippets",
					"icon": "resources/icons/logo_w.svg",
					"when": "config.snippets.useWorkspaceFolder"
				}
			]
		},
		"configuration": {
			"title": "Snippets",
			"properties": {
				"snippets.useWorkspaceFolder": {
					"type": "boolean",
					"default": false,
					"description": "Use folder `.vscode` in current workspace to save snippets as a `snippets.json` file."
				},
				"snippets.showSuggestions": {
					"type": "boolean",
					"default": true,
					"markdownDescription": "Show Snippets suggestions when typing `#snippets.triggerKey#`."
				},
				"snippets.triggerKey": {
					"type": "string",
					"default": ">",
					"minLength": 0,
					"maxLength": 1,
					"markdownDescription": "Character to be typed in order to show Snippets suggestions. This change requires a window restart."
				},
				"snippets.globalPrefix": {
					"type": "string",
					"minLength": 0,
					"maxLength": 5,
					"markdownDescription": "Default prefix to trigger Snippets suggestions (applicable for Snippets with no prefix). Snippets will be suggested as `prefix:snippetName`. This change requires a window restart."
				},
				"snippets.snippetsLocation": {
					"deprecationMessage": "This is deprecated, the new default storage is VS Code globalState. This enables to sync snippets accross multiple machines. To keep using the file system as storage unit, consider using `#snippets.useWorkspaceFolder#`.",
					"type": [
						"string",
						"null"
					],
					"default": null,
					"format": "uri",
					"description": "Specifies the folder path where to save snippets."
				},
				"snippets.confirmBeforeDeletion": {
					"type": "boolean",
					"default": true,
					"markdownDescription": "Show a confirmation alert before deleting a snippet/folder."
				},
				"snippets.runCommandInTerminal": {
					"type": "boolean",
					"default": false,
					"markdownDescription": "Automatically execute open commands in terminal."
				},
				"snippets.camelize": {
					"type": "boolean",
					"default": true,
					"markdownDescription": "Set Snippets labels to camel case when displaying suggestions. Snippets with prefix are auto camelized (`awesome-and-cool snippet` => `awesomeAndCoolSnippet`)."
				},
				"snippets.expertMode": {
					"type": "boolean",
					"default": false,
					"markdownDescription": "I know what I'm doing : \n- Advanced Options visible by default when editing a snippet."
				},
				"snippets.openButton": {
					"type": "boolean",
					"default": false,
					"markdownDescription": "Click the action buttons to open snippet in editor/terminal. This will disable openning snippet by clicking on the snippet name."
				}
			}
		}
	},
	"scripts": {
		"vscode:prepublish": "npm run package",
		"compile": "webpack --devtool nosources-source-map --config ./build/node-extension.webpack.config.js",
		"watch": "webpack --watch --devtool nosources-source-map --config ./build/node-extension.webpack.config.js",
		"package": "webpack --mode production --config ./build/node-extension.webpack.config.js",
		"test-compile": "tsc -p ./",
		"test-watch": "tsc -watch -p ./",
		"pretest": "npm run test-compile && npm run lint",
		"lint": "eslint src --ext ts",
		"test": "node ./out/test/runTest.js"
	},
	"devDependencies": {
		"@types/glob": "^7.1.3",
		"@types/mocha": "^8.0.0",
		"@types/sinon": "^17.0.4",
		"@types/vscode": "^1.75.0",
		"@typescript-eslint/eslint-plugin": "^4.1.1",
		"@typescript-eslint/parser": "^4.1.1",
		"@vscode/test-electron": "^2.3.4",
		"eslint": "^7.9.0",
		"glob": "^7.1.6",
		"mocha": "^11.1.0",
		"sinon": "^20.0.0",
		"ts-loader": "8.2.0",
		"typescript": "^5.7.3",
		"vscode-test": "^1.4.0",
		"webpack": "^5.76.0",
		"webpack-cli": "^4.2.0",
		"y18n": ">=4.0.1"
	},
	"dependencies": {
		"@types/mustache": "^4.0.1",
		"@types/triple-beam": "^1.3.5",
		"mustache": "^4.0.1",
		"winston-transport-vscode": "^0.1.0"
	}
}
